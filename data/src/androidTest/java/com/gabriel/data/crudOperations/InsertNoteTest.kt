package com.gabriel.data.crudOperations

import android.content.Context
import androidx.room.Room
import androidx.test.core.app.ApplicationProvider
import androidx.test.ext.junit.runners.AndroidJUnit4
import com.gabriel.data.datasources.NotesDao
import com.gabriel.data.datasources.NotesDatabase
import com.gabriel.data.models.Note
import kotlinx.coroutines.runBlocking
import org.hamcrest.CoreMatchers.equalTo
import org.hamcrest.MatcherAssert.assertThat
import org.junit.After
import org.junit.Before
import org.junit.Test
import org.junit.runner.RunWith
import java.io.IOException
import java.lang.Exception
import java.text.SimpleDateFormat
import java.util.*

@RunWith(AndroidJUnit4::class)
class InsertNoteTest {

    private lateinit var notesDao: NotesDao
    private lateinit var db: NotesDatabase

    @Before
    fun createDb() {
        val context = ApplicationProvider.getApplicationContext<Context>()
        db = Room.inMemoryDatabaseBuilder(
            context,
            NotesDatabase::class.java
        ).build()
        notesDao = db.notesDao()
    }

    @After
    @Throws(IOException::class)
    fun closeDb() {
        db.close()
    }

    @Test
    @Throws(Exception::class)
    fun insertNote_success() {
        val note = Note(
            title = "Test Title",
            content = "Test content",
            createdAt = SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'", Locale.getDefault()).format(
                Date()
            )
        )
        runBlocking {
            // Autogenerated ID for any Room Entity starts with 1 and increments on each insertion
            // If insertion fails, the insert Query returns -1
            assertThat(notesDao.saveNote(note), equalTo(1L))
        }
    }


}